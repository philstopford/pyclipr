name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libeigen3-dev cmake

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install eigen cmake

      - name: Install system dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' --confirm

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install numpy wheel setuptools

      - name: Build package
        run: |
          python setup.py build_ext --inplace

      - name: Test import
        run: |
          python -c "import pyclipr; print('pyclipr imported successfully')"

      - name: Run example (if available)
        continue-on-error: true
        run: |
          if [ -f examples/example.py ]; then
            cd examples && python example.py
          fi
        shell: bash